{"ast":null,"code":"var _jsxFileName = \"C:\\\\Develop\\\\Web\\\\React\\\\React\\\\MasterReact\\\\08-proyectoclases1\\\\src\\\\Componets\\\\Buscador.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass Buscador extends Component {\n  constructor(props) {\n    super(props);\n    /**\r\n     * Maneja el evento de búsqueda de películas.\r\n     *\r\n     * La función obtiene el valor del campo de búsqueda, filtra el listado de películas\r\n     * para encontrar coincidencias y actualiza el estado del listado de películas y del indicador de no encontrado.\r\n     *\r\n     * @param {Object} e - El evento del input de búsqueda.\r\n     */\n    this.buscarPelicula = e => {\n      const valorBusqueda = e.target.value;\n      this.setState({\n        busqueda: valorBusqueda\n      });\n\n      // Si la longitud de la búsqueda es menor o igual a 1, restablecer el listado de películas al valor genérico\n      if (valorBusqueda.length <= 1) {\n        const peliculasGenericas = JSON.parse(localStorage.getItem('generico')) || [];\n        this.props.setListadoPelicula(peliculasGenericas);\n        this.setState({\n          noEncontrado: false\n        });\n        return;\n      }\n\n      // Filtrar el listado de películas para encontrar coincidencias\n      const peliculas_encontradas = this.props.listadoPelicula.filter(peli => peli.titulo.toLowerCase().includes(valorBusqueda.toLowerCase()));\n\n      // Actualizar el estado noEncontrado basado en el resultado de la búsqueda\n      if (peliculas_encontradas.length === 0) {\n        this.setState({\n          noEncontrado: true\n        });\n        // Restaurar el listado completo de películas desde localStorage\n        const peliculasGenericas = JSON.parse(localStorage.getItem('generico')) || [];\n        this.props.setListadoPelicula(peliculasGenericas);\n      } else {\n        this.setState({\n          noEncontrado: false\n        });\n        // Actualizar el estado del listado de películas con las coincidencias encontradas\n        this.props.setListadoPelicula(peliculas_encontradas);\n      }\n    };\n    this.state = {\n      busqueda: '',\n      noEncontrado: false\n    };\n  }\n  render() {\n    const {\n      busqueda,\n      noEncontrado\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"search\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"title\",\n        children: \"Buscador\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this), noEncontrado && busqueda.length > 1 && /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"no-encontrado\",\n        children: \" No se ha encontrado ninguna coincidencia\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"search_field\",\n          name: \"busqueda\",\n          autoComplete: \"off\",\n          value: busqueda,\n          onChange: this.buscarPelicula // Llamar a buscarPelicula en cada cambio del input\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"search\",\n          children: \"Buscar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this);\n  }\n}\nexport default Buscador;","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Buscador","constructor","props","buscarPelicula","e","valorBusqueda","target","value","setState","busqueda","length","peliculasGenericas","JSON","parse","localStorage","getItem","setListadoPelicula","noEncontrado","peliculas_encontradas","listadoPelicula","filter","peli","titulo","toLowerCase","includes","state","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","id","name","autoComplete","onChange"],"sources":["C:/Develop/Web/React/React/MasterReact/08-proyectoclases1/src/Componets/Buscador.js"],"sourcesContent":["import React, { Component } from 'react';\r\n\r\nclass Buscador extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n          busqueda: '',\r\n          noEncontrado: false\r\n        };\r\n      }\r\n    \r\n      /**\r\n       * Maneja el evento de búsqueda de películas.\r\n       *\r\n       * La función obtiene el valor del campo de búsqueda, filtra el listado de películas\r\n       * para encontrar coincidencias y actualiza el estado del listado de películas y del indicador de no encontrado.\r\n       *\r\n       * @param {Object} e - El evento del input de búsqueda.\r\n       */\r\n      buscarPelicula = (e) => {\r\n        const valorBusqueda = e.target.value;\r\n        this.setState({ busqueda: valorBusqueda });\r\n    \r\n        // Si la longitud de la búsqueda es menor o igual a 1, restablecer el listado de películas al valor genérico\r\n        if (valorBusqueda.length <= 1) {\r\n          const peliculasGenericas = JSON.parse(localStorage.getItem('generico')) || [];\r\n          this.props.setListadoPelicula(peliculasGenericas);\r\n          this.setState({ noEncontrado: false });\r\n          return;\r\n        }\r\n    \r\n        // Filtrar el listado de películas para encontrar coincidencias\r\n        const peliculas_encontradas = this.props.listadoPelicula.filter((peli) =>\r\n          peli.titulo.toLowerCase().includes(valorBusqueda.toLowerCase())\r\n        );\r\n    \r\n        // Actualizar el estado noEncontrado basado en el resultado de la búsqueda\r\n        if (peliculas_encontradas.length === 0) {\r\n            this.setState({ noEncontrado: true });\r\n            // Restaurar el listado completo de películas desde localStorage\r\n            const peliculasGenericas = JSON.parse(localStorage.getItem('generico')) || [];\r\n            this.props.setListadoPelicula(peliculasGenericas);\r\n          } else {\r\n            this.setState({ noEncontrado: false });\r\n            // Actualizar el estado del listado de películas con las coincidencias encontradas\r\n            this.props.setListadoPelicula(peliculas_encontradas);\r\n          }\r\n    \r\n      };\r\n    \r\n      render() {\r\n        const { busqueda, noEncontrado } = this.state;\r\n    \r\n        return (\r\n          <div className=\"search\">\r\n            <h3 className=\"title\">Buscador</h3>\r\n            {/*\r\n              Mostrar el mensaje de \"No se ha encontrado ninguna coincidencia\"\r\n              solo si noEncontrado es true y la longitud de la búsqueda es mayor a 1\r\n            */}\r\n            {noEncontrado && busqueda.length > 1 && (\r\n              <span className='no-encontrado'> No se ha encontrado ninguna coincidencia</span>\r\n            )}\r\n            <form>\r\n              <input\r\n                type=\"text\"\r\n                id=\"search_field\"\r\n                name=\"busqueda\"\r\n                autoComplete=\"off\"\r\n                value={busqueda}\r\n                onChange={this.buscarPelicula} // Llamar a buscarPelicula en cada cambio del input\r\n              />\r\n              <button id=\"search\">Buscar</button>\r\n            </form>\r\n          </div>\r\n        );\r\n      }\r\n}\r\n\r\nexport default Buscador;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}