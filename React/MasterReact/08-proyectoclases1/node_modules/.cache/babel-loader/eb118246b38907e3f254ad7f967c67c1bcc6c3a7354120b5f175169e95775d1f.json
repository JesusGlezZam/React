{"ast":null,"code":"var _jsxFileName = \"C:\\\\Develop\\\\Web\\\\React\\\\React\\\\MasterReact\\\\08-proyectoclases1\\\\src\\\\Componets\\\\Editar.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class Editar extends Component {\n  constructor(props) {\n    super(props);\n    /**\r\n     * Maneja el evento de guardar la edición de una película.\r\n     *\r\n     * La función obtiene los datos del formulario, encuentra la película en el listado\r\n     * y actualiza sus detalles en localStorage y en el estado del componente padre.\r\n     *\r\n     * @param {Object} e - El evento del formulario.\r\n     * @param {number|string} id - El ID de la película a editar.\r\n     */\n    this.guardarEdicion = (e, id) => {\n      e.preventDefault();\n\n      // Obtener el formulario del evento\n      const target = e.target;\n\n      // Buscar el índice de la película a actualizar\n      const {\n        conseguirPeliculas,\n        setListadoPelicula\n      } = this.props;\n      const peliculas_almacenadas = conseguirPeliculas();\n      const indice = peliculas_almacenadas.findIndex(peli => peli.id === id);\n      if (indice === -1) {\n        console.error(`No se encontró ninguna película con el ID ${id}`);\n        return;\n      }\n\n      // Crear un objeto con el ID, título y descripción actualizados\n      const pelicula_actualizada = {\n        id,\n        titulo: target.titulo.value,\n        descripcion: target.descripcion.value\n      };\n\n      // Actualizar el elemento en el array de películas\n      peliculas_almacenadas[indice] = pelicula_actualizada;\n\n      // Guardar el array actualizado en localStorage\n      localStorage.setItem('generico', JSON.stringify(peliculas_almacenadas));\n\n      // Actualizar el estado del componente padre y cerrar el formulario de edición\n      setListadoPelicula(peliculas_almacenadas);\n      this.props.setEditar(0); // Cerrar el formulario de edición\n    };\n    this.state = {\n      titulo_componente: \"Editar película: \"\n    };\n  }\n  render() {\n    const {\n      titulo_componente\n    } = this.state;\n    const {\n      peli\n    } = this.props;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"edit_form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [titulo_componente, \" \", peli.titulo]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => this.guardarEdicion(e, peli.id),\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"titulo\",\n          className: \"titulo_editado\",\n          defaultValue: peli.titulo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          name: \"descripcion\",\n          className: \"descripcion_editada\",\n          defaultValue: peli.descripcion\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"submit\",\n          className: \"editar\",\n          value: \"Actualizar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","jsxDEV","_jsxDEV","Editar","constructor","props","guardarEdicion","e","id","preventDefault","target","conseguirPeliculas","setListadoPelicula","peliculas_almacenadas","indice","findIndex","peli","console","error","pelicula_actualizada","titulo","value","descripcion","localStorage","setItem","JSON","stringify","setEditar","state","titulo_componente","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","defaultValue"],"sources":["C:/Develop/Web/React/React/MasterReact/08-proyectoclases1/src/Componets/Editar.js"],"sourcesContent":["import React, { Component } from 'react'\r\n\r\nexport default class Editar extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            titulo_componente: \"Editar película: \"\r\n        };\r\n    }\r\n\r\n    /**\r\n     * Maneja el evento de guardar la edición de una película.\r\n     *\r\n     * La función obtiene los datos del formulario, encuentra la película en el listado\r\n     * y actualiza sus detalles en localStorage y en el estado del componente padre.\r\n     *\r\n     * @param {Object} e - El evento del formulario.\r\n     * @param {number|string} id - El ID de la película a editar.\r\n     */\r\n    guardarEdicion = (e, id) => {\r\n        e.preventDefault();\r\n\r\n        // Obtener el formulario del evento\r\n        const target = e.target;\r\n\r\n        // Buscar el índice de la película a actualizar\r\n        const { conseguirPeliculas, setListadoPelicula } = this.props;\r\n        const peliculas_almacenadas = conseguirPeliculas();\r\n        const indice = peliculas_almacenadas.findIndex(peli => peli.id === id);\r\n\r\n        if (indice === -1) {\r\n            console.error(`No se encontró ninguna película con el ID ${id}`);\r\n            return;\r\n        }\r\n\r\n        // Crear un objeto con el ID, título y descripción actualizados\r\n        const pelicula_actualizada = {\r\n            id,\r\n            titulo: target.titulo.value,\r\n            descripcion: target.descripcion.value\r\n        };\r\n\r\n        // Actualizar el elemento en el array de películas\r\n        peliculas_almacenadas[indice] = pelicula_actualizada;\r\n\r\n        // Guardar el array actualizado en localStorage\r\n        localStorage.setItem('generico', JSON.stringify(peliculas_almacenadas));\r\n\r\n        // Actualizar el estado del componente padre y cerrar el formulario de edición\r\n        setListadoPelicula(peliculas_almacenadas);\r\n        this.props.setEditar(0); // Cerrar el formulario de edición\r\n    };\r\n\r\n    render() {\r\n        const { titulo_componente } = this.state;\r\n        const { peli } = this.props;\r\n\r\n        return (\r\n            <div className=\"edit_form\">\r\n                <h3>{titulo_componente} {peli.titulo}</h3>\r\n                <form onSubmit={e => this.guardarEdicion(e, peli.id)}>\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"titulo\"\r\n                        className=\"titulo_editado\"\r\n                        defaultValue={peli.titulo}\r\n                    />\r\n                    <textarea\r\n                        name=\"descripcion\"\r\n                        className=\"descripcion_editada\"\r\n                        defaultValue={peli.descripcion}\r\n                    />\r\n                    <input\r\n                        type=\"submit\"\r\n                        className=\"editar\"\r\n                        value=\"Actualizar\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}